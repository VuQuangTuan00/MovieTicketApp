// Generated by view binder compiler. Do not edit!
package com.example.movieticketsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movieticketsapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddEditFoodBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText edtDescription;

  @NonNull
  public final EditText edtFoodName;

  @NonNull
  public final EditText edtPrice;

  @NonNull
  public final EditText edtStatus;

  @NonNull
  public final ImageView imgFoodPreview;

  private DialogAddEditFoodBinding(@NonNull ScrollView rootView, @NonNull EditText edtDescription,
      @NonNull EditText edtFoodName, @NonNull EditText edtPrice, @NonNull EditText edtStatus,
      @NonNull ImageView imgFoodPreview) {
    this.rootView = rootView;
    this.edtDescription = edtDescription;
    this.edtFoodName = edtFoodName;
    this.edtPrice = edtPrice;
    this.edtStatus = edtStatus;
    this.imgFoodPreview = imgFoodPreview;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddEditFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddEditFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_edit_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddEditFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edtDescription;
      EditText edtDescription = ViewBindings.findChildViewById(rootView, id);
      if (edtDescription == null) {
        break missingId;
      }

      id = R.id.edtFoodName;
      EditText edtFoodName = ViewBindings.findChildViewById(rootView, id);
      if (edtFoodName == null) {
        break missingId;
      }

      id = R.id.edtPrice;
      EditText edtPrice = ViewBindings.findChildViewById(rootView, id);
      if (edtPrice == null) {
        break missingId;
      }

      id = R.id.edtStatus;
      EditText edtStatus = ViewBindings.findChildViewById(rootView, id);
      if (edtStatus == null) {
        break missingId;
      }

      id = R.id.imgFoodPreview;
      ImageView imgFoodPreview = ViewBindings.findChildViewById(rootView, id);
      if (imgFoodPreview == null) {
        break missingId;
      }

      return new DialogAddEditFoodBinding((ScrollView) rootView, edtDescription, edtFoodName,
          edtPrice, edtStatus, imgFoodPreview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
