// Generated by view binder compiler. Do not edit!
package com.example.movieticketsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movieticketsapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemReviewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RatingBar ratingBarItem;

  @NonNull
  public final TextView tvComment;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvRatingValue;

  @NonNull
  public final TextView tvUserName;

  private ItemReviewBinding(@NonNull LinearLayout rootView, @NonNull RatingBar ratingBarItem,
      @NonNull TextView tvComment, @NonNull TextView tvDate, @NonNull TextView tvRatingValue,
      @NonNull TextView tvUserName) {
    this.rootView = rootView;
    this.ratingBarItem = ratingBarItem;
    this.tvComment = tvComment;
    this.tvDate = tvDate;
    this.tvRatingValue = tvRatingValue;
    this.tvUserName = tvUserName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ratingBarItem;
      RatingBar ratingBarItem = ViewBindings.findChildViewById(rootView, id);
      if (ratingBarItem == null) {
        break missingId;
      }

      id = R.id.tvComment;
      TextView tvComment = ViewBindings.findChildViewById(rootView, id);
      if (tvComment == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvRatingValue;
      TextView tvRatingValue = ViewBindings.findChildViewById(rootView, id);
      if (tvRatingValue == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      return new ItemReviewBinding((LinearLayout) rootView, ratingBarItem, tvComment, tvDate,
          tvRatingValue, tvUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
