// Generated by view binder compiler. Do not edit!
package com.example.movieticketsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movieticketsapp.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMovieAdminLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnDeleteMovie;

  @NonNull
  public final ImageView btnEditMovie;

  @NonNull
  public final Button btnExpandDetails;

  @NonNull
  public final LinearLayout expandableLayout;

  @NonNull
  public final ShapeableImageView imgMovie;

  @NonNull
  public final RecyclerView recyclerViewPhotos;

  @NonNull
  public final TextView tvCastMovie;

  @NonNull
  public final TextView tvDirectorMovie;

  @NonNull
  public final TextView tvGenresMovie;

  @NonNull
  public final TextView tvRatingMovie;

  @NonNull
  public final TextView tvSynopsisMovie;

  @NonNull
  public final TextView tvTitleMovie;

  private ItemMovieAdminLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnDeleteMovie, @NonNull ImageView btnEditMovie,
      @NonNull Button btnExpandDetails, @NonNull LinearLayout expandableLayout,
      @NonNull ShapeableImageView imgMovie, @NonNull RecyclerView recyclerViewPhotos,
      @NonNull TextView tvCastMovie, @NonNull TextView tvDirectorMovie,
      @NonNull TextView tvGenresMovie, @NonNull TextView tvRatingMovie,
      @NonNull TextView tvSynopsisMovie, @NonNull TextView tvTitleMovie) {
    this.rootView = rootView;
    this.btnDeleteMovie = btnDeleteMovie;
    this.btnEditMovie = btnEditMovie;
    this.btnExpandDetails = btnExpandDetails;
    this.expandableLayout = expandableLayout;
    this.imgMovie = imgMovie;
    this.recyclerViewPhotos = recyclerViewPhotos;
    this.tvCastMovie = tvCastMovie;
    this.tvDirectorMovie = tvDirectorMovie;
    this.tvGenresMovie = tvGenresMovie;
    this.tvRatingMovie = tvRatingMovie;
    this.tvSynopsisMovie = tvSynopsisMovie;
    this.tvTitleMovie = tvTitleMovie;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMovieAdminLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMovieAdminLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_movie_admin_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMovieAdminLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteMovie;
      ImageView btnDeleteMovie = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteMovie == null) {
        break missingId;
      }

      id = R.id.btnEditMovie;
      ImageView btnEditMovie = ViewBindings.findChildViewById(rootView, id);
      if (btnEditMovie == null) {
        break missingId;
      }

      id = R.id.btnExpandDetails;
      Button btnExpandDetails = ViewBindings.findChildViewById(rootView, id);
      if (btnExpandDetails == null) {
        break missingId;
      }

      id = R.id.expandableLayout;
      LinearLayout expandableLayout = ViewBindings.findChildViewById(rootView, id);
      if (expandableLayout == null) {
        break missingId;
      }

      id = R.id.imgMovie;
      ShapeableImageView imgMovie = ViewBindings.findChildViewById(rootView, id);
      if (imgMovie == null) {
        break missingId;
      }

      id = R.id.recyclerViewPhotos;
      RecyclerView recyclerViewPhotos = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewPhotos == null) {
        break missingId;
      }

      id = R.id.tvCastMovie;
      TextView tvCastMovie = ViewBindings.findChildViewById(rootView, id);
      if (tvCastMovie == null) {
        break missingId;
      }

      id = R.id.tvDirectorMovie;
      TextView tvDirectorMovie = ViewBindings.findChildViewById(rootView, id);
      if (tvDirectorMovie == null) {
        break missingId;
      }

      id = R.id.tvGenresMovie;
      TextView tvGenresMovie = ViewBindings.findChildViewById(rootView, id);
      if (tvGenresMovie == null) {
        break missingId;
      }

      id = R.id.tvRatingMovie;
      TextView tvRatingMovie = ViewBindings.findChildViewById(rootView, id);
      if (tvRatingMovie == null) {
        break missingId;
      }

      id = R.id.tvSynopsisMovie;
      TextView tvSynopsisMovie = ViewBindings.findChildViewById(rootView, id);
      if (tvSynopsisMovie == null) {
        break missingId;
      }

      id = R.id.tvTitleMovie;
      TextView tvTitleMovie = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleMovie == null) {
        break missingId;
      }

      return new ItemMovieAdminLayoutBinding((ConstraintLayout) rootView, btnDeleteMovie,
          btnEditMovie, btnExpandDetails, expandableLayout, imgMovie, recyclerViewPhotos,
          tvCastMovie, tvDirectorMovie, tvGenresMovie, tvRatingMovie, tvSynopsisMovie,
          tvTitleMovie);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
