// Generated by view binder compiler. Do not edit!
package com.example.movieticketsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movieticketsapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTicketLayoutBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView ivPoster;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvHour;

  @NonNull
  public final TextView tvMovie;

  @NonNull
  public final TextView tvSeat;

  private ItemTicketLayoutBinding(@NonNull MaterialCardView rootView, @NonNull ImageView ivPoster,
      @NonNull TextView tvDate, @NonNull TextView tvHour, @NonNull TextView tvMovie,
      @NonNull TextView tvSeat) {
    this.rootView = rootView;
    this.ivPoster = ivPoster;
    this.tvDate = tvDate;
    this.tvHour = tvHour;
    this.tvMovie = tvMovie;
    this.tvSeat = tvSeat;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTicketLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTicketLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_ticket_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTicketLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivPoster;
      ImageView ivPoster = ViewBindings.findChildViewById(rootView, id);
      if (ivPoster == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvHour;
      TextView tvHour = ViewBindings.findChildViewById(rootView, id);
      if (tvHour == null) {
        break missingId;
      }

      id = R.id.tvMovie;
      TextView tvMovie = ViewBindings.findChildViewById(rootView, id);
      if (tvMovie == null) {
        break missingId;
      }

      id = R.id.tvSeat;
      TextView tvSeat = ViewBindings.findChildViewById(rootView, id);
      if (tvSeat == null) {
        break missingId;
      }

      return new ItemTicketLayoutBinding((MaterialCardView) rootView, ivPoster, tvDate, tvHour,
          tvMovie, tvSeat);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
